---
## Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-gateway-app
spec:
  selector:
    matchLabels:
      app: cloud-gateway-app
  template:
    metadata:
      labels:
        app: cloud-gateway-app
    spec:
      containers:
      - name: cloud-gateway-app
        image: IMAGE_URL/cloud-gateway
        imagePullPolicy: Always
        resources:
          requests:
            memory: "100Mi"
            cpu: "250m"
          limits:
            memory: "200Mi"
            cpu: "500m"
        ports:
        - containerPort: 9090
        env:
          - name: CONFIG_SERVER_URL
            valueFrom:
              configMapKeyRef:
                key: "config_url"
                name: "config-cm"

---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: test-cert
spec:
  domains:
    - jjcode.pe.kr

---
## Ingress HTTP to HTTPS redirect test 

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloud-ingress
  annotations:
    networking.gke.io/managed-certifiactes: "test-cert"
    kubernetes.io/ingress.global-static-ip-name: "test-ip"
    # managed-certifiactes 을 사용하는 경우
    # 외부 어플리케이션 부하 분산기가 완전히 프로그래밍 다음에
    # 인그레스를 업데이트하고, 해당 주석을 사용할 수 있다.
    # kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.class: "gce"
spec:
  # HTTPS 통신 중 암호화를 담당하는 부분
  tls:
    - secretName: ""
  rules:
  - host: jjcode.pe.kr
    http:
      paths:
      - pathType: ImplementationSpecific
        path: /*
        backend:
          service:
            name: cloud-gateway-svc
            port: 
              number: 433

---
apiVersion: v1
kind: Service
metadata:
  name: cloud-gateway-svc
  annotations:
    cloud.google.com/app-protocols: '{"": "HTTPS"}'
spec:
  type: NodePort
  selector:
    app: cloud-gateway-app
  ports:
  - port: 433
    targetPort: 9090
    protocol: TCP